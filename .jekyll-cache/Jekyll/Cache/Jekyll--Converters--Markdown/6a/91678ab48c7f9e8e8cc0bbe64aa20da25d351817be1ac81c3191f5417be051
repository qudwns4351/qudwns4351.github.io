I""<h3 id="영속성-컨텍스트persistent-context">영속성 컨텍스트(Persistent Context)</h3>
<p>영속성 컨텍스트란 엔티티를 관리하고 영속화시키는 환경을 의미합니다.</p>
<h5 id="좋은-이유">좋은 이유</h5>
<ul>
  <li>1차 캐시 Map 객체로 저장
    <ul>
      <li>엔티티를 식별자 값(@Id 맵핑)으로 구분한다. Key-value로 관리하는데 이때 key 값이  @Id 값이 된다.</li>
    </ul>
  </li>
  <li>식별자 값 필요
    <ul>
      <li>영속상태의 엔티티는 반드시 식별자 값이 있어야 한다.</li>
    </ul>
  </li>
  <li>동일성 보장 동일한 객체 반환
    <ul>
      <li>Collection에서 객체를 빼오듯이 같은 객체를 반환하게 되면 새로운 객체가 나오는 것이 아니라 동일한 객체가 반환된다.</li>
    </ul>
  </li>
  <li>변경 감지 자동 Update
    <ul>
      <li>영속성 상태의 객체는 객체의 데이터가 변경이 되면, 자동 update 된다. EntityManager에서 flush가 되고, commit이 됩니다.</li>
    </ul>
  </li>
  <li>트랜잭션으로 인한 쓰기 지연
    <ul>
      <li>영속성 컨텍스트는 트랜잭션 범위 안에서 동작한다. 그래서 트랜잭션이 끝나야 Commit이 이루어지고 반영된다.</li>
    </ul>
  </li>
</ul>
:ET